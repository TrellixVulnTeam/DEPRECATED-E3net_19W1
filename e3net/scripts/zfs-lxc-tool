#! /bin/bash
# this shell script is to manipulate zfs filesystem
lxcpool='lxcpool'
lxcdir='/var/lib/lxc/'

#
# get lxcpool's total size in Gigabytes
#
#
get_total_size()
{
    size_str=`zpool list  |grep "^$lxcpool " |tr -s ' ' |cut -d ' ' -f2`
    if [[ "$size_str" == *G ]] ; then
        echo  `echo $size_str | tr -d "G"`
    else 
        echo 0
    fi
}

get_used_size()
{
    total=0
    for item in `zfs get quota  |grep "^$lxcpool/"  |tr -s ' ' |cut -d ' ' -f 3`
    do
        if [[ "$item" != *G ]] ; then
            continue
        fi
        quota=`echo $item | tr -d "G"`
        total=`awk "BEGIN {print $total+$quota}"`
    done
    echo $total
}

get_free_size()
{
    total=$(get_total_size)
    used=$(get_used_size)
    cmp_rc=`awk "BEGIN {print $used < $total}"`
    if [ "$cmp_rc" -eq 1 ] ; then
        echo `awk "BEGIN {print  $total-$used}"`
    else
        echo 0
    fi
}

alloc_filesystem()
{
    #$1:filesystem
    #$2:mountpoint,deprecated...
    #$3:size in Gigabytes
    if [ ! $# -eq 2 ] ; then
        return 1
    fi
    free_size=$(get_free_size)
    cmp_rc=`awk "BEGIN {print $2 < $free_size}"`
    if [ ! $cmp_rc -eq 1 ] ; then
        return 2
    fi
    
    zfs list |grep "^$lxcpool/$1 " >/dev/null
    if [ $? -eq 0 ] ; then
        return 3
    fi
    
    zfs create -o mountpoint=$lxcdir$1 $lxcpool/$1
    if [ ! $? -eq 0 ] ; then
        return 4
    fi

    zfs set quota=$2G $lxcpool/$1
    if [ ! $? -eq 0 ] ; then
        zfs destroy $lxcpool/$1
        return 5
    fi 
}


exist_filesystem()
{
	#$1:filesystem
        if [ ! $# -eq 1 ] ; then
                return 1
        fi
	zfs list |grep "^$lxcpool/$1 " >/dev/null
}


dealloc_filesystem()
{
	#$1:filesystem
	if [ ! $# -eq 1 ] ; then
		return 1
	fi
	
	zfs list |grep "^$lxcpool/$1 " >/dev/null
	if [ ! $? -eq 0 ] ; then
		return 2
	fi
	
	zfs destroy $lxcpool/$1 #2&>/dev/null
	if [ ! $? -eq 0 ] ; then
		return 3
	fi
}

list_filesystems()
{   
    start=0
    for f in `zfs list  |grep "^$lxcpool/" |cut -d ' ' -f1   |sed 's=^[a-zA-Z0-9]*/==g'`
    do
        if [ $start -eq 0 ] ; then
            start=1
        else
            printf '#'
        fi
        printf "$f"
    done
}


#used=$(get_free_size)
#echo $used
#alloc_filesystem 709200a0-8e89-4885-bee9-ebde78ba2424 /usr/var/lib/lxc/709200a0-8e89-4885-bee9-ebde78ba242e 15
#alloc_filesystem 709200a0-8e89-4885-bee9-ebde78ba242e /usr/var/lib/lxc/709200a0-8e89-4885-bee9-ebde78ba242e 1.4
#alloc_filesystem 709200a0-8e89-4885-bee9-ebde78ba242f /usr/var/lib/lxc/709200a0-8e89-4885-bee9-ebde78ba242f 2.6
#dealloc_filesystem 709200a0-8e89-4885-bee9-ebde78ba242f
#exist_filesystem 709200a0-8e89-4885-bee9-ebde78ba2425
#echo $used
#exit 23

if [ $# -lt 1 ] ; then 
    exit 1
fi

case $1 in
    free_size)
        free=$(get_free_size)
        printf $free
    ;;
    list_fs)
        list_filesystems
    ;;
    create_fs)
        shift
        alloc_filesystem $@
    ;;
    delete_fs)
        shift
        dealloc_filesystem $@
    ;;
    exist_fs):
        shift
        exist_filesystem $@
    ;;
    *)
        exit 2
    ;;
esac
